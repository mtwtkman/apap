# Stubs for requests.adapters (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .auth import _basic_auth_str
from .compat import basestring, urlparse
from .cookies import extract_cookies_to_jar
from .exceptions import ConnectTimeout, ConnectionError, InvalidProxyURL, InvalidSchema, InvalidURL, ProxyError, ReadTimeout, RetryError, SSLError
from .models import Response
from .structures import CaseInsensitiveDict
from .utils import DEFAULT_CA_BUNDLE_PATH, extract_zipped_paths, get_auth_from_url, get_encoding_from_headers, prepend_scheme_if_needed, select_proxy, urldefragauth
from typing import Any, Optional

DEFAULT_POOLBLOCK: bool
DEFAULT_POOLSIZE: int
DEFAULT_RETRIES: int
DEFAULT_POOL_TIMEOUT: Any

class BaseAdapter:
    def __init__(self) -> None: ...
    def send(self, request: Any, stream: bool = ..., timeout: Optional[Any] = ..., verify: bool = ..., cert: Optional[Any] = ..., proxies: Optional[Any] = ...) -> None: ...
    def close(self) -> None: ...

class HTTPAdapter(BaseAdapter):
    __attrs__: Any = ...
    max_retries: Any = ...
    config: Any = ...
    proxy_manager: Any = ...
    def __init__(self, pool_connections: Any = ..., pool_maxsize: Any = ..., max_retries: Any = ..., pool_block: Any = ...) -> None: ...
    poolmanager: Any = ...
    def init_poolmanager(self, connections: Any, maxsize: Any, block: Any = ..., **pool_kwargs: Any) -> None: ...
    def proxy_manager_for(self, proxy: Any, **proxy_kwargs: Any): ...
    def cert_verify(self, conn: Any, url: Any, verify: Any, cert: Any) -> None: ...
    def build_response(self, req: Any, resp: Any): ...
    def get_connection(self, url: Any, proxies: Optional[Any] = ...): ...
    def close(self) -> None: ...
    def request_url(self, request: Any, proxies: Any): ...
    def add_headers(self, request: Any, **kwargs: Any) -> None: ...
    def proxy_headers(self, proxy: Any): ...
    def send(self, request: Any, stream: bool = ..., timeout: Optional[Any] = ..., verify: bool = ..., cert: Optional[Any] = ..., proxies: Optional[Any] = ...): ...
